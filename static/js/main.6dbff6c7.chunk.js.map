{"version":3,"sources":["Components/ListItems.js","App.js","index.js"],"names":["library","add","faTrash","ListItems","props","listItems","items","map","item","className","type","id","key","value","text","onChange","e","setUpdateHandler","target","onClick","deleteHandler","icon","duration","easing","App","handleInput","setState","currentItem","Date","now","addItem","preventDefault","newItem","state","newItems","filteredItems","filter","updatedText","forEach","localStorageItems","JSON","parse","window","localStorage","getItem","setItem","stringify","this","onSubmit","placeholder","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gTAYAA,IAAQC,IAAIC,KA6CGC,MA1Cf,SAAmBC,GAClB,IAEMC,EAFQD,EAAME,MAEIC,KAAI,SAACC,GAC5B,OAGC,aAFA,CAEA,OAAKC,UAAU,OAAf,SACC,8BACC,uBACCC,KAAK,OACLC,GAAIH,EAAKI,IACTC,MAAOL,EAAKM,KAGZC,SAAU,SAACC,GACVZ,EAAMa,iBAAiBD,EAAEE,OAAOL,MAAOL,EAAKI,QAE9C,+BACC,cAAC,IAAD,CACCO,QAAS,WACRf,EAAMgB,cAAcZ,EAAKI,MAG1BH,UAAU,UACVY,KAAK,gBAlBkBb,EAAKI,QAyBlC,OAEC,aADA,CACA,gBACC,cAAC,IAAD,CAAUU,SAAU,IAAKC,OAAO,cAAhC,SACElB,OC/CgBmB,E,kDACpB,WAAYpB,GAAQ,IAAD,uBAClB,cAAMA,IAqBPqB,YAAc,SAACT,GACd,EAAKU,SAAS,CACbC,YAAa,CACZb,KAAME,EAAEE,OAAOL,MAIfD,IAAKgB,KAAKC,UA7BM,EAkCnBC,QAAU,SAACd,GACVA,EAAEe,iBAEF,IAAMC,EAAU,EAAKC,MAAMN,YAG3B,GAAqB,KAAjBK,EAAQlB,KAAa,CACxB,IAAMoB,EAAQ,sBAAO,EAAKD,MAAM3B,OAAlB,CAAyB0B,IACvC,EAAKN,SAAS,CACbpB,MAAO4B,EACPP,YAAa,CACZb,KAAM,GACNF,IAAK,QA9CU,EAoDnBQ,cAAgB,SAACR,GAIhB,IAAMuB,EAAgB,EAAKF,MAAM3B,MAAM8B,QAAO,SAAC5B,GAAD,OAAUA,EAAKI,MAAQA,KAErE,EAAKc,SAAS,CACbpB,MAAO6B,KA3DU,EA+DnBlB,iBAAmB,SAACoB,EAAazB,GAEhC,IAAMN,EAAK,YAAO,EAAK2B,MAAM3B,OAC7BA,EAAMgC,SAAQ,SAAC9B,GAGVA,EAAKI,MAAQA,IAChBJ,EAAKM,KAAOuB,MAGd,EAAKX,SAAS,CACbpB,MAAOA,KAtER,IAAIiC,EAAoBC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,UAJ7C,OAKlBL,EAA0C,OAAtBA,EAA6BA,EAAoB,GAGrE,EAAKN,MAAQ,CACZ3B,MAAOiC,EACPZ,YAAa,CACZb,KAAM,GACNF,IAAK,KAZW,E,iEAmBlB8B,OAAOC,aAAaE,QAAQ,QAASL,KAAKM,UAAUC,KAAKd,MAAM3B,U,+BA4D/D,OACC,8BACC,sBAAKG,UAAU,MAAf,UACC,iCACC,uBAAME,GAAG,aAAaqC,SAAUD,KAAKjB,QAArC,UACC,uBACCpB,KAAK,OACLuC,YAAY,aAEZpC,MAAOkC,KAAKd,MAAMN,YAAYb,KAE9BC,SAAUgC,KAAKtB,cAEhB,wBAAQf,KAAK,SAAb,sBAGF,cAAC,EAAD,CAGCJ,MAAOyC,KAAKd,MAAM3B,MAClBc,cAAe2B,KAAK3B,cACpBH,iBAAkB8B,KAAK9B,4B,GArGIiC,aCCjCC,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,W","file":"static/js/main.6dbff6c7.chunk.js","sourcesContent":["import React from 'react';\r\nimport './ListItems.css';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\r\n\r\n// To use trash icon while displaying todos\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\n// To use transitions while displaying/deleting todos\r\nimport FlipMove from 'react-flip-move';\r\n\r\n// To use font-awesome trash icon\r\nlibrary.add(faTrash);\r\n\r\n// Maps over all the items in the items array and displays each element in its own <div> tag\r\nfunction ListItems(props) {\r\n\tconst items = props.items;\r\n\t// Maps over all the items in the items array and displays each element in its own <div> tag\r\n\tconst listItems = items.map((item) => {\r\n\t\treturn (\r\n\t\t\t// Adding <div> tags and event listeners to all the items present in the items state array\r\n\r\n\t\t\t<div className='list' key={item.key}>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tid={item.key}\r\n\t\t\t\t\t\tvalue={item.text}\r\n\t\t\t\t\t\t// Functionality to change the text of a single Todo item\r\n\t\t\t\t\t\t// Passes the text to be changed and the unique ID of the todo item\r\n\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\tprops.setUpdateHandler(e.target.value, item.key);\r\n\t\t\t\t\t\t}}></input>\r\n\t\t\t\t\t<span>\r\n\t\t\t\t\t\t<FontAwesomeIcon\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tprops.deleteHandler(item.key);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t// Trash icon imported from font-awesome\r\n\t\t\t\t\t\t\tclassName='faIcons'\r\n\t\t\t\t\t\t\ticon='trash'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t);\r\n\t});\r\n\treturn (\r\n\t\t// Flip move library is used for the transition effect when displaying and removing todos\r\n\t\t<div>\r\n\t\t\t<FlipMove duration={500} easing='ease-in-out'>\r\n\t\t\t\t{listItems}\r\n\t\t\t</FlipMove>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ListItems;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport ListItems from './Components/ListItems';\n\nexport default class App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\t//To persist todo items in local storage between browser refreshes\n\t\tlet localStorageItems = JSON.parse(window.localStorage.getItem('items'));\n\t\tlocalStorageItems = localStorageItems !== null ? localStorageItems : [];\n\n\t\t//Setting initial state\n\t\tthis.state = {\n\t\t\titems: localStorageItems,\n\t\t\tcurrentItem: {\n\t\t\t\ttext: '',\n\t\t\t\tkey: '',\n\t\t\t},\n\t\t};\n\t}\n\n\t// Persist state value to browser localStorage when component updates\n\tcomponentDidUpdate() {\n\t\twindow.localStorage.setItem('items', JSON.stringify(this.state.items));\n\t}\n\n\thandleInput = (e) => {\n\t\tthis.setState({\n\t\t\tcurrentItem: {\n\t\t\t\ttext: e.target.value,\n\n\t\t\t\t// Selects and assigns the current date timestamp as the unique ID for the todo\n\t\t\t\t// 'uuid' library can be used here to implement the same functionality more reliably\n\t\t\t\tkey: Date.now(),\n\t\t\t},\n\t\t});\n\t};\n\n\taddItem = (e) => {\n\t\te.preventDefault();\n\t\t// Funcion to be called when the current Item is to be added to the items state array\n\t\tconst newItem = this.state.currentItem;\n\n\t\t//Does nothing if currentItem.text is empty => Disallows blank todos from being added\n\t\tif (newItem.text !== '') {\n\t\t\tconst newItems = [...this.state.items, newItem];\n\t\t\tthis.setState({\n\t\t\t\titems: newItems,\n\t\t\t\tcurrentItem: {\n\t\t\t\t\ttext: '',\n\t\t\t\t\tkey: '',\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t};\n\n\tdeleteHandler = (key) => {\n\t\t// Filters all items where item->key is not equal to the value passed as a parameter to the function.\n\n\t\t// Removes the element to be deleted from the state array of items\n\t\tconst filteredItems = this.state.items.filter((item) => item.key !== key);\n\t\t// Update the items array in state with the updated array after the item has been deleted\n\t\tthis.setState({\n\t\t\titems: filteredItems,\n\t\t});\n\t};\n\n\tsetUpdateHandler = (updatedText, key) => {\n\t\t// Make a copy of the state items array\n\t\tconst items = [...this.state.items];\n\t\titems.forEach((item) => {\n\t\t\t/* While mapping over the items array, if the key of the item === the key passed to the function, the value of the text property of the item is set to the updatedText value passed to the function */\n\n\t\t\tif (item.key === key) {\n\t\t\t\titem.text = updatedText;\n\t\t\t}\n\t\t});\n\t\tthis.setState({\n\t\t\titems: items,\n\t\t});\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className='App'>\n\t\t\t\t\t<header>\n\t\t\t\t\t\t<form id='to-do-form' onSubmit={this.addItem}>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\tplaceholder='Enter text'\n\t\t\t\t\t\t\t\t/*Initially, the value is an empty string, it updates as characters are typed into the input field. For each keystroke, the state value of the currentItem object is updated.*/\n\t\t\t\t\t\t\t\tvalue={this.state.currentItem.text}\n\t\t\t\t\t\t\t\t// Updates state value per keystroke\n\t\t\t\t\t\t\t\tonChange={this.handleInput}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<button type='submit'>Add</button>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</header>\n\t\t\t\t\t<ListItems\n\t\t\t\t\t\t/* Passing down functions to the ListItems component to be used as event listeners in the individual todo items.*/\n\n\t\t\t\t\t\titems={this.state.items}\n\t\t\t\t\t\tdeleteHandler={this.deleteHandler}\n\t\t\t\t\t\tsetUpdateHandler={this.setUpdateHandler}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root'),\n);\n"],"sourceRoot":""}